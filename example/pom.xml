<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <parent>
        <groupId>my.job</groupId>
        <artifactId>my-functions</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>example</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <name>Example Lambda</name>

    <properties>

        <!-- Build Configuration -->
        <kotlin.version>1.4.0</kotlin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Build Output -->
        <main.class>my.job.example.Application</main.class>
        <jar-base-name>${project.artifactId}-lambda</jar-base-name>
        <aws-jar-name>${jar-base-name}-aws</aws-jar-name>
        <web-jar-name>${jar-base-name}-web</web-jar-name>

        <!-- Configuration Validation Version -->
        <javax.validation.version>2.0.1.Final</javax.validation.version>

        <!-- External Dependency Version -->
        <jackson.version>2.11.2</jackson.version>
        <spring.version>3.0.10.RELEASE</spring.version>
        <amazon.awssdk.version>2.13.51</amazon.awssdk.version>

        <!-- Plugin Versions -->
        <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
        <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
        <spring-boot-maven-plugin.version>2.3.3.RELEASE</spring-boot-maven-plugin.version>

    </properties>

    <dependencies>

        <!-- Configuration Validation -->

        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${javax.validation.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>6.1.6.Final</version>
        </dependency>


        <!-- Jackson -->

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-json-org</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- AWS -->

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
            <version>${amazon.awssdk.version}</version>
        </dependency>

        <!-- AWS Deployment -->

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-function-adapter-aws</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Local Web Deployment -->

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-function-webflux</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>1.1.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <finalName>${jar-base-name}</finalName>

        <plugins>

            <!-- Build a Jar for deployment to AWS. -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade-plugin.version}</version>

                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring-boot-maven-plugin.version}</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                    <finalName>${jar-base-name}-aws</finalName>
                    <!-- <shadedArtifactAttached>false</shadedArtifactAttached> -->
                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <shadedClassifierName>aws</shadedClassifierName>

                    <transformers>

                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <mainClass>${main.class}</mainClass>
                        </transformer>

                        <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                            <resource>META-INF/spring.handlers</resource>
                        </transformer>

                        <transformer
                                implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
                            <resource>META-INF/spring.factories</resource>
                        </transformer>

                        <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                            <resource>META-INF/spring.schemas</resource>
                        </transformer>

                    </transformers>

                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/license/**</exclude>
                                <exclude>META-INF/maven/**</exclude>
                                <exclude>META-INF/LICENSE</exclude>
                                <exclude>META-INF/NOTICE</exclude>
                                <exclude>META-INF/*.txt</exclude>
                                <exclude>LICENSE</exclude>
                                <exclude>NOTICE</exclude>
                                <exclude>/*.txt</exclude>
                                <exclude>application.properties</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>

                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Build a Jar for local deployment as a web server. -->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-maven-plugin.version}</version>

                <configuration>
                    <mainClass>${main.class}</mainClass>
                    <finalName>${web-jar-name}</finalName>
                </configuration>

                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Delete the default jar created by Maven we don't need it after packaging the shaded jar. -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>

                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete file="${project.build.directory}/${jar-base-name}.jar"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
